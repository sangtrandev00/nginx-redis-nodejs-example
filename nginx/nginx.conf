# Chia server thành 2 server web1 và web2 (Để phân tán lượng truy cập ?)
upstream loadbalancer {
  server web1:5000;
  server web2:5000;
}
# Dựng ra 1 server listen ở port 80, khi có request đến sẽ chuyển hướng đến loadbalancer
server {
  listen 80;
  server_name localhost;
  location / {
    proxy_pass http://loadbalancer;
  }
}

# Ngoài cách cấu hình trên thì còn cách cấu hình nào khác
# Đây là triển khai qua docker máy ảo. Còn triển khai lên internet thì như thế nào ?
# Liệu có thực sự cần nginx lắm không ?

# # # OVERVIEW
# Putting It All Together
# Here’s what happens step-by-step when you use this nginx.conf:
# Client Request: A client (e.g., a browser) sends a request to http://localhost.
# NGINX Receives Request: NGINX, configured to listen on port 80 and handle requests for localhost, receives this request.
# Proxy to Upstream: NGINX forwards the request to the loadbalancer, which contains web1 and web2 as backend servers.
# Load Balancing: The loadbalancer block determines which server (web1 or web2) should handle the request. If using round-robin (the default), it alternates between web1 and web2.
# Server Response: The chosen server (web1 or web2) processes the request and sends a response back to NGINX.
# Return to Client: NGINX sends the response back to the client, completing the request-response cycle.